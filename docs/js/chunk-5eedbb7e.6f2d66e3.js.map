{"version":3,"sources":["webpack:///./node_modules/bibtex2json/src/bibtex2json.js","webpack:///./src/client/components/projects/ProjectPublications.vue?eb85","webpack:///src/client/components/projects/ProjectPublications.vue","webpack:///./src/client/components/projects/ProjectPublications.vue?1e4f","webpack:///./src/client/components/projects/ProjectPublications.vue"],"names":["exports","BibtexParser","this","months","notKey","pos","input","entries","Array","currentEntry","setInput","t","getEntries","isWhitespace","s","match","canCommentOut","undefined","skipWhitespace","substring","length","TypeError","tryMatch","matchAt","value_braces","bracecount","start","escaped","end","value_comment","str","brcktCnt","value_quotes","single_value","k","key","indexOf","toLowerCase","value","values","push","join","optional","key_equals_value","val","trim","key_value_list","kv","entry_body","d","directive","preamble","comment","entry","alernativeCitationKey","forEach","citationKey","entryTags","author","split","year","bibtex","toUpperCase","string","toJSON","b","toBibtex","json","compact","out","entrysep","indent","i","entryType","tags","jdx","render","_vm","_h","$createElement","_c","_self","attrs","publications","title","staticRenderFns","ProjectPublicationsvue_type_script_lang_js_","components","b-list-publications","__webpack_require__","e","then","bind","data","getPublications","methods","vm","$ajax","get","response","bib","bibtex2json_default","a","final","j","projects_ProjectPublicationsvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-5eedbb7e.6f2d66e3.js","sourcesContent":["/* start bibtexParse 0.0.24 */\n\n//Original work by Henrik Muehe (c) 2010\n//\n//CommonJS port by Mikola Lysenko 2013\n//\n//Choice of compact (default) or pretty output from toBibtex:\n//\t\tNick Bailey, 2017.\n//\n//Port to Browser lib by ORCID / RCPETERS\n//\n//Issues:\n//no comment handling within strings\n//no string concatenation\n//no variable values yet\n//Grammar implemented here:\n//bibtex -> (string | preamble | comment | entry)*;\n//string -> '@STRING' '{' key_equals_value '}';\n//preamble -> '@PREAMBLE' '{' value '}';\n//comment -> '@COMMENT' '{' value '}';\n//entry -> '@' key '{' key ',' key_value_list '}';\n//key_value_list -> key_equals_value (',' key_equals_value)*;\n//key_equals_value -> key '=' value;\n//value -> value_quotes | value_braces | key;\n//value_quotes -> '\"' .*? '\"'; // not quite\n//value_braces -> '{' .*? '\"'; // not quite\n(function (exports) {\n\n    function BibtexParser() {\n\n        this.months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\n        this.notKey = [',', '{', '}', ' ', '='];\n        this.pos = 0;\n        this.input = \"\";\n        this.entries = new Array();\n\n        this.currentEntry = \"\";\n\n        this.setInput = function (t) {\n            this.input = t;\n        };\n\n        this.getEntries = function () {\n            return this.entries;\n        };\n\n        this.isWhitespace = function (s) {\n            return (s == ' ' || s == '\\r' || s == '\\t' || s == '\\n');\n        };\n\n        this.match = function (s, canCommentOut) {\n            if (canCommentOut == undefined || canCommentOut == null)\n                canCommentOut = true;\n            this.skipWhitespace(canCommentOut);\n            if (this.input.substring(this.pos, this.pos + s.length) == s) {\n                this.pos += s.length;\n            } else {\n                throw TypeError(\"Token mismatch: match\", \"expected \" + s + \", found \" +\n                    this.input.substring(this.pos));\n            };\n            this.skipWhitespace(canCommentOut);\n        };\n\n        this.tryMatch = function (s, canCommentOut) {\n            if (canCommentOut == undefined || canCommentOut == null)\n                canCommentOut = true;\n            this.skipWhitespace(canCommentOut);\n            if (this.input.substring(this.pos, this.pos + s.length) == s) {\n                return true;\n            } else {\n                return false;\n            };\n            this.skipWhitespace(canCommentOut);\n        };\n\n        /* when search for a match all text can be ignored, not just white space */\n        this.matchAt = function () {\n            while (this.input.length > this.pos && this.input[this.pos] != '@') {\n                this.pos++;\n            };\n\n            if (this.input[this.pos] == '@') {\n                return true;\n            };\n            return false;\n        };\n\n        this.skipWhitespace = function (canCommentOut) {\n            while (this.isWhitespace(this.input[this.pos])) {\n                this.pos++;\n            };\n            if (this.input[this.pos] == \"%\" && canCommentOut == true) {\n                while (this.input[this.pos] != \"\\n\") {\n                    this.pos++;\n                };\n                this.skipWhitespace(canCommentOut);\n            };\n        };\n\n        this.value_braces = function () {\n            var bracecount = 0;\n            this.match(\"{\", false);\n            var start = this.pos;\n            var escaped = false;\n            while (true) {\n                if (!escaped) {\n                    if (this.input[this.pos] == '}') {\n                        if (bracecount > 0) {\n                            bracecount--;\n                        } else {\n                            var end = this.pos;\n                            this.match(\"}\", false);\n                            return this.input.substring(start, end);\n                        };\n                    } else if (this.input[this.pos] == '{') {\n                        bracecount++;\n                    } else if (this.pos >= this.input.length - 1) {\n                        throw TypeError(\"Unterminated value: value_braces\");\n                    };\n                };\n                if (this.input[this.pos] == '\\\\' && escaped == false)\n                    escaped = true;\n                else\n                    escaped = false;\n                this.pos++;\n            };\n        };\n\n        this.value_comment = function () {\n            var str = '';\n            var brcktCnt = 0;\n            while (!(this.tryMatch(\"}\", false) && brcktCnt == 0)) {\n                str = str + this.input[this.pos];\n                if (this.input[this.pos] == '{')\n                    brcktCnt++;\n                if (this.input[this.pos] == '}')\n                    brcktCnt--;\n                if (this.pos >= this.input.length - 1) {\n                    throw TypeError(\"Unterminated value: value_comment\", +this.input.substring(start));\n                };\n                this.pos++;\n            };\n            return str;\n        };\n\n        this.value_quotes = function () {\n            this.match('\"', false);\n            var start = this.pos;\n            var escaped = false;\n            while (true) {\n                if (!escaped) {\n                    if (this.input[this.pos] == '\"') {\n                        var end = this.pos;\n                        this.match('\"', false);\n                        return this.input.substring(start, end);\n                    } else if (this.pos >= this.input.length - 1) {\n                        throw TypeError(\"Unterminated value: value_quotes\", this.input.substring(start));\n                    };\n                }\n                if (this.input[this.pos] == '\\\\' && escaped == false)\n                    escaped = true;\n                else\n                    escaped = false;\n                this.pos++;\n            };\n        };\n\n        this.single_value = function () {\n            var start = this.pos;\n            if (this.tryMatch(\"{\")) {\n                return this.value_braces();\n            } else if (this.tryMatch('\"')) {\n                return this.value_quotes();\n            } else {\n                var k = this.key();\n                if (k.match(\"^[0-9]+$\"))\n                    return k;\n                else if (this.months.indexOf(k.toLowerCase()) >= 0)\n                    return k.toLowerCase();\n                else\n                    throw \"Value expected: single_value\" + this.input.substring(start) + ' for key: ' + k;\n\n            };\n        };\n\n        this.value = function () {\n            var values = [];\n            values.push(this.single_value());\n            while (this.tryMatch(\"#\")) {\n                this.match(\"#\");\n                values.push(this.single_value());\n            };\n            return values.join(\"\");\n        };\n\n        this.key = function (optional) {\n            var start = this.pos;\n            while (true) {\n                if (this.pos >= this.input.length) {\n                    throw TypeError(\"Runaway key: key\");\n                };\n                // а-яА-Я is Cyrillic\n                //console.log(this.input[this.pos]);\n                if (this.notKey.indexOf(this.input[this.pos]) >= 0) {\n                    if (optional && this.input[this.pos] != ',') {\n                        this.pos = start;\n                        return null;\n                    };\n                    return this.input.substring(start, this.pos);\n                } else {\n                    this.pos++;\n\n                };\n            };\n        };\n\n        this.key_equals_value = function () {\n            var key = this.key();\n            if (this.tryMatch(\"=\")) {\n                this.match(\"=\");\n                var val = this.value();\n                key = key.trim()\n                return [key, val];\n            } else {\n                throw TypeError(\"Value expected, equals sign missing: key_equals_value\",\n                    this.input.substring(this.pos));\n            };\n        };\n\n        this.key_value_list = function () {\n            var kv = this.key_equals_value();\n            this.currentEntry['entryTags'] = {};\n            this.currentEntry['entryTags'][kv[0]] = kv[1];\n            while (this.tryMatch(\",\")) {\n                this.match(\",\");\n                // fixes problems with commas at the end of a list\n                if (this.tryMatch(\"}\")) {\n                    break;\n                };\n                kv = this.key_equals_value();\n                this.currentEntry['entryTags'][kv[0]] = kv[1];\n            };\n        };\n\n        this.entry_body = function (d) {\n            this.currentEntry = {};\n            this.currentEntry['citationKey'] = this.key(true);\n            this.currentEntry['entryType'] = d.substring(1);\n            if (this.currentEntry['citationKey'] != null) {\n                this.match(\",\");\n            }\n            this.key_value_list();\n            this.entries.push(this.currentEntry);\n        };\n\n        this.directive = function () {\n            this.match(\"@\");\n            return \"@\" + this.key();\n        };\n\n        this.preamble = function () {\n            this.currentEntry = {};\n            this.currentEntry['entryType'] = 'PREAMBLE';\n            this.currentEntry['entry'] = this.value_comment();\n            this.entries.push(this.currentEntry);\n        };\n\n        this.comment = function () {\n            this.currentEntry = {};\n            this.currentEntry['entryType'] = 'COMMENT';\n            this.currentEntry['entry'] = this.value_comment();\n            this.entries.push(this.currentEntry);\n        };\n\n        this.entry = function (d) {\n            this.entry_body(d);\n        };\n\n        this.alernativeCitationKey = function () {\n            this.entries.forEach(function (entry) {\n                if (!entry.citationKey && entry.entryTags) {\n                    entry.citationKey = '';\n                    if (entry.entryTags.author) {\n                        entry.citationKey += entry.entryTags.author.split(',')[0] += ', ';\n                    }\n                    entry.citationKey += entry.entryTags.year;\n                }\n            });\n        }\n\n        this.bibtex = function () {\n            while (this.matchAt()) {\n                var d = this.directive();\n                this.match(\"{\");\n                if (d.toUpperCase() == \"@STRING\") {\n                    this.string();\n                } else if (d.toUpperCase() == \"@PREAMBLE\") {\n                    this.preamble();\n                } else if (d.toUpperCase() == \"@COMMENT\") {\n                    this.comment();\n                } else {\n                    this.entry(d);\n                }\n                this.match(\"}\");\n            };\n\n            this.alernativeCitationKey();\n        };\n    };\n\n    exports.toJSON = function (bibtex) {\n        var b = new BibtexParser();\n        b.setInput(bibtex);\n        b.bibtex();\n        return b.entries;\n    };\n\n    /* added during hackathon don't hate on me */\n    /* Increased the amount of white-space to make entries\n     * more attractive to humans. Pass compact as false\n     * to enable */\n    exports.toBibtex = function (json, compact) {\n        if (compact === undefined) compact = true;\n        var out = '';\n\n        var entrysep = ',';\n        var indent = '';\n        if (!compact) {\n            entrysep = ',\\n';\n            indent = '    ';\n        }\n        for (var i in json) {\n            out += \"@\" + json[i].entryType;\n            out += '{';\n            if (json[i].citationKey)\n                out += json[i].citationKey + entrysep;\n            if (json[i].entry)\n                out += json[i].entry;\n            if (json[i].entryTags) {\n                var tags = indent;\n                for (var jdx in json[i].entryTags) {\n                    if (tags.trim().length != 0)\n                        tags += entrysep + indent;\n                    tags += jdx + (compact ? '={' : ' = {') +\n                        json[i].entryTags[jdx] + '}';\n                }\n                out += tags;\n            }\n            out += compact ? '}\\n' : '\\n}\\n\\n';\n        }\n        return out;\n\n    };\n\n})(typeof exports === 'undefined' ? this['bibtexParse'] = {} : exports);\n\n/* end bibtexParse */","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-list-publications',{attrs:{\"publications\":_vm.publications,\"title\":_vm.title}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-list-publications :publications=\"publications\" :title=\"title\"></b-list-publications>\n</template>\n\n<script>\nimport bibtexParse from 'bibtex2json'\nexport default {\n  components: {\n    'b-list-publications': () => import('@/components/base/list/BaseListOfPublications.vue')\n  },\n  data () {\n    return {\n      publications: this.getPublications(),\n      title: 'Publications of openbiox projects'\n    }\n  },\n  methods: {\n    getPublications: function () {\n      // vm is required\n      var vm = this\n      this.$ajax\n        .get('/api/v1/projects/publications')\n        .then(function (response) {\n          var bib = bibtexParse.toJSON(response.data)\n          var final = []\n          for (var j = 0; j < bib.length; j++) {\n            final.push(bib[j].entryTags)\n          }\n          vm.publications = final\n        })\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProjectPublications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../node_modules/vuetify-loader/lib/loader.js!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProjectPublications.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProjectPublications.vue?vue&type=template&id=7163d8e2&\"\nimport script from \"./ProjectPublications.vue?vue&type=script&lang=js&\"\nexport * from \"./ProjectPublications.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}